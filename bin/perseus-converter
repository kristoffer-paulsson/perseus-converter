#!/usr/bin/env python3
#
# Copyright (c) 2022 by Kristoffer Paulsson <kristoffer.paulsson@talenten.se>.
#
# Permission to use, copy, modify, and/or distribute this software for any purpose with
# or without fee is hereby granted, provided that the above copyright notice and this
# permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO
# THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
# IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#     https://opensource.org/licenses/ISC
#
# SPDX-License-Identifier: ISC
#
# Contributors:
#     Kristoffer Paulsson - initial implementation
#
from pathlib import PosixPath

from perseusconverter.config import Config
from perseusconverter.converter import Converter
from perseusconverter.logging import Logger
from perseusconverter.scanner import Scanner

logger = Logger("perseus")
config = Config({})

REMOVE = ("note", "bibl", "head")
# REMOVE += ("del") # ?

ALPHABET = ["_b", "_c", "_d"]
NAMES = set()


def calc_name(name: str, ext: int = 0) -> str:
    alt_name = name
    if name in NAMES:
        alt_name = calc_name(name + ALPHABET[ext], ext + 1)
    NAMES.add(name)
    return alt_name


def koine_dealer(file: PosixPath):
    data = Converter(file, REMOVE)
    if data.is_koine():
        logger.info("Start converting: {}".format(data.file))
        logger.info("Export: {}".format(
            data.export(
                PosixPath("../corpus"),
                calc_name(data.get_filename()) + ".txt",
                True
            )
        ))


def latin_dealer(file: PosixPath):
    data = Converter(file, REMOVE)
    if data.is_latin():
        logger.info("Start converting: {}".format(data.file))
        logger.info("Export: {}".format(
            data.export(
                PosixPath("../corpus"),
                calc_name(data.get_filename()) + ".txt",
                True
            )
        ))


if __name__ == '__main__':
    Scanner(PosixPath("../data")).scan(koine_dealer)
